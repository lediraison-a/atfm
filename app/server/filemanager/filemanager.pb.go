// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: filemanager.proto

package filemanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	IsDir   bool                   `protobuf:"varint,2,opt,name=IsDir,proto3" json:"IsDir,omitempty"`
	Mode    uint32                 `protobuf:"varint,3,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Size    uint64                 `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
	ModTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=ModTime,proto3" json:"ModTime,omitempty"`
	Symlink string                 `protobuf:"bytes,6,opt,name=Symlink,proto3" json:"Symlink,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filemanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{0}
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FileInfo) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *FileInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetModTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ModTime
	}
	return nil
}

func (x *FileInfo) GetSymlink() string {
	if x != nil {
		return x.Symlink
	}
	return ""
}

type FileArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	BasePath string `protobuf:"bytes,2,opt,name=BasePath,proto3" json:"BasePath,omitempty"`
	Mod      string `protobuf:"bytes,3,opt,name=Mod,proto3" json:"Mod,omitempty"`
}

func (x *FileArg) Reset() {
	*x = FileArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filemanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileArg) ProtoMessage() {}

func (x *FileArg) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileArg.ProtoReflect.Descriptor instead.
func (*FileArg) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{1}
}

func (x *FileArg) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileArg) GetBasePath() string {
	if x != nil {
		return x.BasePath
	}
	return ""
}

func (x *FileArg) GetMod() string {
	if x != nil {
		return x.Mod
	}
	return ""
}

type FileInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*FileInfo `protobuf:"bytes,1,rep,name=Files,proto3" json:"Files,omitempty"`
}

func (x *FileInfos) Reset() {
	*x = FileInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filemanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfos) ProtoMessage() {}

func (x *FileInfos) ProtoReflect() protoreflect.Message {
	mi := &file_filemanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfos.ProtoReflect.Descriptor instead.
func (*FileInfos) Descriptor() ([]byte, []int) {
	return file_filemanager_proto_rawDescGZIP(), []int{2}
}

func (x *FileInfos) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

var File_filemanager_proto protoreflect.FileDescriptor

var file_filemanager_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xac, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x49, 0x73, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x4d,
	0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b,
	0x22, 0x4b, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x6f, 0x64, 0x22, 0x38, 0x0a,
	0x09, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x48, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69,
	0x72, 0x12, 0x14, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x1a, 0x16, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x00, 0x42, 0x1d, 0x5a, 0x1b, 0x61, 0x74, 0x66, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_filemanager_proto_rawDescOnce sync.Once
	file_filemanager_proto_rawDescData = file_filemanager_proto_rawDesc
)

func file_filemanager_proto_rawDescGZIP() []byte {
	file_filemanager_proto_rawDescOnce.Do(func() {
		file_filemanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_filemanager_proto_rawDescData)
	})
	return file_filemanager_proto_rawDescData
}

var file_filemanager_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_filemanager_proto_goTypes = []interface{}{
	(*FileInfo)(nil),              // 0: filemanager.FileInfo
	(*FileArg)(nil),               // 1: filemanager.FileArg
	(*FileInfos)(nil),             // 2: filemanager.FileInfos
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_filemanager_proto_depIdxs = []int32{
	3, // 0: filemanager.FileInfo.ModTime:type_name -> google.protobuf.Timestamp
	0, // 1: filemanager.FileInfos.Files:type_name -> filemanager.FileInfo
	1, // 2: filemanager.FileManager.ReadDir:input_type -> filemanager.FileArg
	2, // 3: filemanager.FileManager.ReadDir:output_type -> filemanager.FileInfos
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_filemanager_proto_init() }
func file_filemanager_proto_init() {
	if File_filemanager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filemanager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filemanager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filemanager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filemanager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filemanager_proto_goTypes,
		DependencyIndexes: file_filemanager_proto_depIdxs,
		MessageInfos:      file_filemanager_proto_msgTypes,
	}.Build()
	File_filemanager_proto = out.File
	file_filemanager_proto_rawDesc = nil
	file_filemanager_proto_goTypes = nil
	file_filemanager_proto_depIdxs = nil
}
